"use strict";(globalThis.webpackChunkfrontend=globalThis.webpackChunkfrontend||[]).push([["50136"],{25291:function(e,a,t){Object.defineProperty(a,"__esModule",{value:!0});let l=t(59779),n=t(32099),r=t(30300);a.default={"init(Ljava/lang/invoke/MemberName;Ljava/lang/Object;)V":(e,a)=>{let t=a[1],n=a[0],i=t.getClass().getName();if("java/lang/reflect/Field"===i)throw Error("Not implemented");if("java/lang/reflect/Method"===i){let a=t._getField("clazz","Ljava/lang/Class;","java/lang/reflect/Method"),i=a.getNativeField("classRef"),g=t._getField("slot","I","java/lang/reflect/Method"),o=i.getMethodFromSlot(g);if(!o){r.logger.warn("init(Ljava/lang/invoke/MemberName;Ljava/lang/Object;)V: Method not found"),e.returnStackFrame();return}let v=o.getAccessFlags()|l.MemberNameFlags.MN_IS_METHOD;o.checkStatic()?v|=l.MethodHandleReferenceKind.REF_invokeStatic<<l.MemberNameFlags.MN_REFERENCE_KIND_SHIFT:i.checkInterface()?v|=l.MethodHandleReferenceKind.REF_invokeInterface<<l.MemberNameFlags.MN_REFERENCE_KIND_SHIFT:v|=l.MethodHandleReferenceKind.REF_invokeVirtual<<l.MemberNameFlags.MN_REFERENCE_KIND_SHIFT,n._putField("flags","I","java/lang/invoke/MemberName",v),n._putField("clazz","Ljava/lang/Class;","java/lang/invoke/MemberName",a),n.putNativeField("vmtarget",o.generateBridgeMethod()),e.returnStackFrame();return}if("java/lang/reflect/Constructor"===i){let a=t._getField("clazz","Ljava/lang/Class;","java/lang/reflect/Constructor"),r=a.getNativeField("classRef"),i=t._getField("slot","I","java/lang/reflect/Constructor"),g=r.getMethodFromSlot(i);if(!g)return void e.returnStackFrame();let o=g.getAccessFlags()|l.MemberNameFlags.MN_IS_CONSTRUCTOR|l.MethodHandleReferenceKind.REF_invokeSpecial<<l.MemberNameFlags.MN_REFERENCE_KIND_SHIFT;return n._putField("flags","I","java/lang/invoke/MemberName",o),n._putField("clazz","Ljava/lang/Class;","java/lang/invoke/MemberName",a),n.putNativeField("vmtarget",g.generateBridgeMethod()),void e.returnStackFrame()}e.throwNewException("java/lang/InternalError","init: Invalid target.")},"resolve(Ljava/lang/invoke/MemberName;Ljava/lang/Class;)Ljava/lang/invoke/MemberName;":(e,a)=>{let t=a[0],i=t._getField("type","Ljava/lang/Object;","java/lang/invoke/MemberName"),g=t._getField("name","Ljava/lang/String;","java/lang/invoke/MemberName"),o=t._getField("clazz","Ljava/lang/Class;","java/lang/invoke/MemberName"),v=t._getField("flags","I","java/lang/invoke/MemberName");if(null===o||null===g||null===i)return void e.throwNewException("java/lang/IllegalArgumentException","Invalid MemberName");let s=o.getNativeField("classRef"),d=(0,r.j2jsString)(g);if(v&(l.MemberNameFlags.MN_IS_CONSTRUCTOR|l.MemberNameFlags.MN_IS_METHOD)){let a=i._getField("rtype","Ljava/lang/Class;","java/lang/invoke/MethodType").getNativeField("classRef").getDescriptor(),l=i._getField("ptypes","[Ljava/lang/Class;","java/lang/invoke/MethodType").getJsArray().map(e=>e.getNativeField("classRef").getDescriptor()),r=`(${l.join("")})${a}`,g=s.lookupMethod(d+r,null,!1,!1,!0,!0);if(g.status===n.ResultType.ERROR)return void e.throwNewException("java/lang/NoSuchMethodError",`Invalid method ${r}`);let o=g.result,m=o.getAccessFlags();t._putField("flags","I","java/lang/invoke/MemberName",m|v);let c=o.generateBridgeMethod();return t.putNativeField("vmtarget",c),void e.returnStackFrame(t)}if(!(v&l.MemberNameFlags.MN_IS_FIELD))return void e.throwNewException("java/lang/LinkageError","Could not resolve member name");{let a=i.getNativeField("classRef").getDescriptor(),l=s.lookupField(d+a);if(null===l)return void e.throwNewException("java/lang/NoSuchFieldError",`Invalid field ${d}`);let n=l.getAccessFlags();return t._putField("flags","I","java/lang/invoke/MemberName",n|v),t.putNativeField("field",l),void e.returnStackFrame(t)}},"registerNatives()V":e=>{e.returnStackFrame()},"getConstant(I)I":e=>{e.returnStackFrame(0)},"getMembers(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Class;I[Ljava/lang/invoke/MemberName;)I":(e,a)=>{let t=a[0],n=a[1]?(0,r.j2jsString)(a[1]):a[1],i=a[2]?(0,r.j2jsString)(a[2]):a[2],g=a[3],o=a[5],v=a[6].getJsArray(),s=0,d=t.getNativeField("classRef"),m=Object.values(d.getDeclaredMethods()),c=e=>{if(o)return void o--;if(v.length<=s)return;let t=v[s],g=l.MemberNameFlags.MN_IS_METHOD,m=0;e.getClass().checkInterface()?m=l.MethodHandleReferenceKind.REF_invokeInterface:e.checkStatic()?m=l.MethodHandleReferenceKind.REF_invokeStatic:"<init>"===e.getName()?(g=l.MemberNameFlags.MN_IS_CONSTRUCTOR,m=l.MethodHandleReferenceKind.REF_newInvokeSpecial):m=l.MethodHandleReferenceKind.REF_invokeVirtual,g|=m<<l.MemberNameFlags.MN_REFERENCE_KIND_SHIFT,g|=e.getAccessFlags(),t._putField("flags","I","java/lang/invoke/MemberName",g),t._putField("clazz","Ljava/lang/Class;","java/lang/invoke/MemberName",e.getClass().getJavaObject()),t._putField("name","Ljava/lang/String;","java/lang/invoke/MemberName",n?a[1]:(0,r.js2jString)(d.getLoader(),e.getName())),t._putField("type","Ljava/lang/Object;","java/lang/invoke/MemberName",i?a[2]:(0,r.js2jString)(d.getLoader(),e.getDescriptor())),t.putNativeField("vmtarget",e.generateBridgeMethod()),s++};if(g&l.MemberNameFlags.MN_IS_CONSTRUCTOR)for(let e of m)(null===n||"<init>"===n&&"<init>"===e.getName())&&(null===i||e.getDescriptor()===i)&&c(e);if(g&l.MemberNameFlags.MN_IS_METHOD)for(let e of m)"<init>"!==e.getName()&&(null===n||e.getName()===n)&&(null===i||e.getDescriptor()===i)&&c(e);if(g&l.MemberNameFlags.MN_IS_FIELD)for(let e of d.getDeclaredFields()){if(o)return void o--;if(v.length<=s)return;let t=v[s],g=l.MemberNameFlags.MN_IS_FIELD;g|=(e.checkStatic()?l.MethodHandleReferenceKind.REF_getStatic:l.MethodHandleReferenceKind.REF_getField)<<l.MemberNameFlags.MN_REFERENCE_KIND_SHIFT,g|=e.getAccessFlags(),t._putField("flags","I","java/lang/invoke/MemberName",g),t._putField("clazz","Ljava/lang/Class;","java/lang/invoke/MemberName",e.getClass().getJavaObject()),t._putField("name","Ljava/lang/String;","java/lang/invoke/MemberName",n?a[1]:(0,r.js2jString)(d.getLoader(),e.getName())),t._putField("type","Ljava/lang/Object;","java/lang/invoke/MemberName",i?a[2]:(0,r.js2jString)(d.getLoader(),e.getFieldDesc())),t.putNativeField("vmindex",e.getClass().getFieldVmIndex(e)),s++}e.returnStackFrame(s)},"objectFieldOffset(Ljava/lang/invoke/MemberName;)J":(e,a)=>{let t=a[0];e.returnStackFrame64(BigInt(t.getNativeField("field").slot))}}}}]);
//# sourceMappingURL=50136.06b3b134.js.map